<Type Name="AutoValidate" FullName="System.Windows.Forms.AutoValidate">
  <TypeSignature Language="C#" Value="public enum AutoValidate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AutoValidate extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AutoValidate" />
  <TypeSignature Language="VB.NET" Value="Public Enum AutoValidate" />
  <TypeSignature Language="C++ CLI" Value="public enum class AutoValidate" />
  <TypeSignature Language="F#" Value="type AutoValidate = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
             For a given container control, determines whether the data in child controls
             will automatically be validated when the user attempts to change the focus.
            </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If a user switches focus off of a Windows Forms control, the control will use <xref:System.Windows.Forms.AutoValidate> to determine how to validate its data. This type of validation is called implicit validation, because it occurs without the application developer having to make an explicit call to <xref:System.Windows.Forms.ContainerControl.Validate%2A> or <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>.  
  
 The property corresponding to this value will have different defaults based on the type of control. For more information, see [User Input Validation in Windows Forms](~/docs/framework/winforms/user-input-validation-in-windows-forms.md).  
  
   
  
## Examples  
 The following code example turns off implicit validation for a form and all of its contained controls, and instead manually performs validation of all of the form's children when a mouse button is clicked.  
  
 [!code-csharp[ValidateChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidateChildren/CS/Form1.cs#1)]
 [!code-vb[ValidateChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidateChildren/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
    <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
  </Docs>
  <Members>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="Disable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.AutoValidate Disable = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AutoValidate.Disable" />
      <MemberSignature Language="VB.NET" Value="Disable" />
      <MemberSignature Language="C++ CLI" Value="Disable" />
      <MemberSignature Language="F#" Value="Disable = 0" Usage="System.Windows.Forms.AutoValidate.Disable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
             Controls in this container will not be validated when the focus changes.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="EnableAllowFocusChange">
      <MemberSignature Language="C#" Value="EnableAllowFocusChange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.AutoValidate EnableAllowFocusChange = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AutoValidate.EnableAllowFocusChange" />
      <MemberSignature Language="VB.NET" Value="EnableAllowFocusChange" />
      <MemberSignature Language="C++ CLI" Value="EnableAllowFocusChange" />
      <MemberSignature Language="F#" Value="EnableAllowFocusChange = 2" Usage="System.Windows.Forms.AutoValidate.EnableAllowFocusChange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
             Controls in this container will be validated when the focus changes.
             If a validation error occurs, the focus is allowed to move to the other
             control.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="EnablePreventFocusChange">
      <MemberSignature Language="C#" Value="EnablePreventFocusChange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.AutoValidate EnablePreventFocusChange = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AutoValidate.EnablePreventFocusChange" />
      <MemberSignature Language="VB.NET" Value="EnablePreventFocusChange" />
      <MemberSignature Language="C++ CLI" Value="EnablePreventFocusChange" />
      <MemberSignature Language="F#" Value="EnablePreventFocusChange = 1" Usage="System.Windows.Forms.AutoValidate.EnablePreventFocusChange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
             Controls in this container will be validated when the focus changes.
             If a validation error occurs, the focus is forced to stay in the
             current control.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.AutoValidate Inherit = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AutoValidate.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberSignature Language="F#" Value="Inherit = -1" Usage="System.Windows.Forms.AutoValidate.Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
             AutoValidate setting for this container is determined by its parent container.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
